
/*
 * 
 */

package com.eoddata.ws.data;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.9
 * Sat Jul 24 13:12:42 WST 2010
 * Generated source version: 2.2.9
 * 
 */


@WebServiceClient(name = "Data", 
                  wsdlLocation = "file:/Users/lydonchandra/java/EodQuote/EodQuote/src/main/resources/eod.xml",
                  targetNamespace = "http://ws.eoddata.com/Data") 
public class Data extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://ws.eoddata.com/Data", "Data");
    public final static QName DataSoap12 = new QName("http://ws.eoddata.com/Data", "DataSoap12");
    public final static QName DataSoap = new QName("http://ws.eoddata.com/Data", "DataSoap");
    public final static QName DataHttpGet = new QName("http://ws.eoddata.com/Data", "DataHttpGet");
    public final static QName DataHttpPost = new QName("http://ws.eoddata.com/Data", "DataHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/lydonchandra/java/EodQuote/EodQuote/src/main/resources/eod.xml");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/lydonchandra/java/EodQuote/EodQuote/src/main/resources/eod.xml");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public Data(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Data(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Data() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap12")
    public DataSoap getDataSoap12() {
        return super.getPort(DataSoap12, DataSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap12")
    public DataSoap getDataSoap12(WebServiceFeature... features) {
        return super.getPort(DataSoap12, DataSoap.class, features);
    }
    /**
     * 
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap")
    public DataSoap getDataSoap() {
        return super.getPort(DataSoap, DataSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataSoap
     */
    @WebEndpoint(name = "DataSoap")
    public DataSoap getDataSoap(WebServiceFeature... features) {
        return super.getPort(DataSoap, DataSoap.class, features);
    }
    /**
     * 
     * @return
     *     returns DataHttpGet
     */
    @WebEndpoint(name = "DataHttpGet")
    public DataHttpGet getDataHttpGet() {
        return super.getPort(DataHttpGet, DataHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataHttpGet
     */
    @WebEndpoint(name = "DataHttpGet")
    public DataHttpGet getDataHttpGet(WebServiceFeature... features) {
        return super.getPort(DataHttpGet, DataHttpGet.class, features);
    }
    /**
     * 
     * @return
     *     returns DataHttpPost
     */
    @WebEndpoint(name = "DataHttpPost")
    public DataHttpPost getDataHttpPost() {
        return super.getPort(DataHttpPost, DataHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DataHttpPost
     */
    @WebEndpoint(name = "DataHttpPost")
    public DataHttpPost getDataHttpPost(WebServiceFeature... features) {
        return super.getPort(DataHttpPost, DataHttpPost.class, features);
    }

}
